{"version":3,"sources":["../../src/context.tsx","../../src/helpers.tsx","../../src/CalendarHeader.tsx","../../src/CalendarBody/Months.tsx","../../src/CalendarBody/Day.tsx","../../src/CalendarBody/Week.tsx","../../src/CalendarBody/Years.tsx","../../src/CalendarBody/index.tsx","../../src/index.tsx","App.js","index.js"],"names":["ReactanggalContext","createContext","setPreSelectionYear","setPreSelection","setStep","setCurrentSelected","preSelection","preSelectionYear","minDate","maxDate","showOutsideMonth","forceFocus","setForceFocus","myGetYearStart","year","getPreSelectionYear","getYear","currentYearStart","CalendarHeader","useContext","step","renderStepView","useMemo","format","handleDisabledPrevious","isBefore","endOfMonth","subMonths","firstYearPreSelectionYear","Boolean","endOfYear","subYears","handleDisabledNext","isAfter","startOfMonth","addMonths","startOfYear","addYears","className","onClick","disabled","monthsArr","firstMonth","Months","key","i","el","num","month","Month","monthRef","useRef","currentSelected","isFocusable","getMonth","isDisabled","isSameYear","handleClick","useCallback","setMonth","useEffect","handleKeyDown","e","newPreSelection","disabledMove","ref","onKeyDown","tabIndex","pakaiClass","Day","day","dayRef","isOutsideMonth","isSameMonth","isSameDay","subWeeks","subDays","addWeeks","addDays","getDate","Week","weekStart","week","renderDays","map","Years","yearStart","yearColumn","renderYears","years","Year","yearRef","newValue","setYear","getYearNewPre","CalendarBody","renderDayNames","startOfWeek","renderWeeks","weeks","currentWeekStart","getWeeksInMonth","renderYearsColumn","yearsColumn","renderMonths","React","renderCalender","ReactanggalRoot","calendarRef","focusableElements","focus","window","selected","onChange","useState","value","startOfDay","endOfDay","Date","App","date","setDate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf24b898.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\ninterface IReactanggalProvider {\r\n  currentSelected?: Date | null | undefined\r\n  setCurrentSelected: (value: Date | null | undefined) => void\r\n  step?: number\r\n  setStep: (value: number) => void\r\n  preSelection: Date\r\n  setPreSelection?: (value: Date) => void\r\n  preSelectionYear: Date\r\n  setPreSelectionYear: (value: Date) => void\r\n  minDate: Date | null | undefined\r\n  maxDate: Date | null | undefined\r\n  showOutsideMonth: boolean\r\n  forceFocus: boolean\r\n  setForceFocus: (value: boolean) => void\r\n}\r\n\r\nexport const ReactanggalContext = createContext<IReactanggalProvider>({\r\n  setPreSelectionYear: () => { },\r\n  setPreSelection: () => { },\r\n  setStep: () => { },\r\n  setCurrentSelected: () => { },\r\n  preSelection: new Date(),\r\n  preSelectionYear: new Date(),\r\n  minDate: null,\r\n  maxDate: null,\r\n  showOutsideMonth: false,\r\n  forceFocus: false,\r\n  setForceFocus: () => { }\r\n});\r\n","import { getYear } from \"date-fns\"\r\n\r\n// untuk dpt tahun awal dari suatu range tahun\r\nexport const myGetYearStart = (year: Date, totalYears: number) => {\r\n  const getPreSelectionYear = getYear(year)\r\n  let currentYearStart = +getPreSelectionYear % +totalYears\r\n  currentYearStart = +getPreSelectionYear - (currentYearStart !== 0 ? currentYearStart : totalYears) + 1\r\n  return currentYearStart\r\n}\r\n","import { addMonths, addYears, endOfMonth, endOfYear, format, getYear, isAfter, isBefore, startOfMonth, startOfYear, subMonths, subYears } from 'date-fns'\r\nimport React, { useContext, useMemo } from 'react'\r\nimport { ReactanggalContext } from './context'\r\nimport { myGetYearStart } from './helpers'\r\n\r\nconst CalendarHeader = () => {\r\n  const {\r\n    setStep,\r\n    step,\r\n    setPreSelection = () => { },\r\n    preSelection,\r\n    setPreSelectionYear,\r\n    preSelectionYear,\r\n    minDate,\r\n    maxDate,\r\n    setForceFocus\r\n  } = useContext(ReactanggalContext)\r\n\r\n  const handleStep = () => {\r\n    if (step === 0) {\r\n      setPreSelectionYear(preSelection)\r\n      setStep(1)\r\n      setForceFocus(true)\r\n    } else setStep(0)\r\n  }\r\n\r\n  const handleNext = () => {\r\n    if (handleDisabledNext) return\r\n    if (step === 0) setPreSelection(addMonths(preSelection, 1))\r\n    else if (step === 1) setPreSelectionYear(addYears(preSelectionYear, 24))\r\n    else if (step === 2) setPreSelectionYear(addYears(preSelectionYear, 1))\r\n  }\r\n\r\n  const handlePrevious = () => {\r\n    if (handleDisabledPrevious) return\r\n    if (step === 0) setPreSelection(subMonths(preSelection, 1))\r\n    else if (step === 1) setPreSelectionYear(subYears(preSelectionYear, 24))\r\n    else if (step === 2) setPreSelectionYear(subYears(preSelectionYear, 1))\r\n  }\r\n\r\n  const renderStepView = useMemo(() => {\r\n    if (step === 0) return format(preSelection, 'MMMM yyyy')\r\n    if (step === 1) {\r\n      const currentYearStart = myGetYearStart(preSelectionYear, 24)\r\n      return `${currentYearStart} - ${+currentYearStart + 23}`\r\n    }\r\n    if (step === 2) return getYear(preSelectionYear)\r\n    return\r\n  }, [step, preSelection, preSelectionYear])\r\n\r\n  const handleDisabledPrevious = useMemo(() => {\r\n    if (step === 0 && minDate) return isBefore(endOfMonth(subMonths(preSelection, 1)), minDate)\r\n    if (step === 1) {\r\n      const firstYearPreSelectionYear = myGetYearStart(preSelectionYear, 24)\r\n      if (minDate) return (firstYearPreSelectionYear - 1) < getYear(minDate)\r\n      return !Boolean(firstYearPreSelectionYear - 1)\r\n    }\r\n    if (step === 2) {\r\n      if (minDate) return isBefore(endOfYear(subYears(preSelectionYear, 1)), minDate)\r\n      return !Boolean(getYear(preSelectionYear) - 1)\r\n    }\r\n    return\r\n  }, [preSelectionYear, step, preSelection, minDate])\r\n\r\n  const handleDisabledNext = useMemo(() => {\r\n    if (!maxDate) return false\r\n    if (step === 0) return isAfter(startOfMonth(addMonths(preSelection, 1)), maxDate)\r\n    if (step === 1) return (myGetYearStart(preSelectionYear, 24) + 24) > getYear(maxDate)\r\n    if (step === 2) return isAfter(startOfYear(addYears(preSelectionYear, 1)), maxDate)\r\n    return\r\n  }, [step, preSelection, maxDate, preSelectionYear])\r\n\r\n  return (\r\n    <div className=\"reactanggal__header\">\r\n      <button\r\n        className=\"reactanggal__button reactanggal__header-period-control-button\"\r\n        onClick={handleStep}\r\n      >\r\n        {renderStepView}\r\n      </button>\r\n      <div>\r\n        <button\r\n          disabled={handleDisabledPrevious}\r\n          className=\"reactanggal__button reactanggal__header-arrow-button reactanggal__header-arrow-button--previous\"\r\n          onClick={handlePrevious}\r\n        />\r\n        <button\r\n          disabled={handleDisabledNext}\r\n          className=\"reactanggal__button reactanggal__header-arrow-button reactanggal__header-arrow-button--next\"\r\n          onClick={handleNext}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalendarHeader\r\n","import { addMonths, endOfMonth, format, getMonth, isAfter, isSameYear, setMonth, startOfMonth, startOfYear, subMonths } from 'date-fns'\r\nimport pakaiClass from 'pakai-class'\r\nimport React, { useCallback, useContext, useEffect, useMemo, useRef } from 'react'\r\nimport { ReactanggalContext } from '../context'\r\n\r\nconst monthsArr = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]]\r\n\r\nconst firstMonth = startOfYear(new Date())\r\n\r\nconst Months = () => {\r\n  return <div>\r\n    {\r\n      monthsArr.map((el, i) => (\r\n        <div key={`monthColumn-${i}`} className=\"reactanggal__calendar-months\">\r\n          {el.map(num => (\r\n            <Month\r\n              key={`month-${num}`}\r\n              month={num}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))\r\n    }\r\n  </div>\r\n}\r\n\r\ninterface IMonth {\r\n  month: number\r\n}\r\n\r\nconst Month: React.FC<IMonth> = ({\r\n  month\r\n}) => {\r\n  const monthRef = useRef<HTMLDivElement>(null)\r\n\r\n  const {\r\n    currentSelected,\r\n    setPreSelectionYear,\r\n    preSelectionYear,\r\n    setPreSelection = () => { },\r\n    setStep,\r\n    minDate,\r\n    maxDate,\r\n    forceFocus,\r\n    setForceFocus\r\n  } = useContext(ReactanggalContext)\r\n\r\n  const isFocusable = useMemo(() => month === getMonth(preSelectionYear), [month, preSelectionYear])\r\n\r\n  const isDisabled = useMemo(() => {\r\n    if (!minDate && !maxDate) return\r\n    return (minDate && month < getMonth(minDate) && isSameYear(preSelectionYear, minDate)) || (maxDate && month > getMonth(maxDate) && isSameYear(preSelectionYear, maxDate))\r\n  }, [minDate, maxDate, month, preSelectionYear])\r\n\r\n  const handleClick = useCallback(() => {\r\n    if (isDisabled) return\r\n    setPreSelection(setMonth(preSelectionYear, month))\r\n    setStep(0)\r\n    setForceFocus(true)\r\n  }, [isDisabled, setPreSelection, preSelectionYear, setStep, setForceFocus])\r\n\r\n  //watch forceFocus\r\n  useEffect(() => {\r\n    if (forceFocus && isFocusable) {\r\n      setForceFocus(false)\r\n      monthRef.current?.focus()\r\n    }\r\n  }, [forceFocus, isFocusable, setForceFocus])\r\n\r\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\r\n    if (!isFocusable) return\r\n    const key = e.key\r\n    if (key !== ' ' && key !== 'Enter' && key !== 'ArrowUp' && key !== 'ArrowDown' && key !== 'ArrowRight' && key !== 'ArrowLeft') return\r\n    if (key === ' ' || key === 'Enter') {\r\n      handleClick()\r\n      return\r\n    }\r\n\r\n    let newPreSelection;\r\n    let disabledMove;\r\n    if (key === 'ArrowUp' || key === 'ArrowLeft') {\r\n      newPreSelection = subMonths(preSelectionYear, key === 'ArrowUp' ? 4 : 1)\r\n      disabledMove = minDate && isAfter(startOfMonth(minDate), newPreSelection)\r\n    }\r\n    else if (key === 'ArrowDown' || key === 'ArrowRight') {\r\n      newPreSelection = addMonths(preSelectionYear, key === 'ArrowDown' ? 4 : 1)\r\n      disabledMove = maxDate && isAfter(newPreSelection, endOfMonth(maxDate))\r\n    }\r\n    if (!disabledMove && newPreSelection) {\r\n      setPreSelectionYear(newPreSelection)\r\n      setForceFocus(true)\r\n    }\r\n  }, [isFocusable, handleClick, minDate, maxDate, preSelectionYear, setPreSelectionYear, setForceFocus])\r\n\r\n  return (\r\n    <div\r\n      ref={monthRef}\r\n      onKeyDown={handleKeyDown}\r\n      tabIndex={isFocusable ? 0 : -1}\r\n      className={pakaiClass(\r\n        \"reactanggal__button reactanggal__calendar-month\",\r\n        (+month === +getMonth(new Date()) && isSameYear(preSelectionYear, new Date())) && 'reactanggal__calendar-month--today',\r\n        (currentSelected && +month === +getMonth(currentSelected) && isSameYear(preSelectionYear, currentSelected)) && 'reactanggal__calendar-month--selected',\r\n        isDisabled && 'reactanggal__calendar-month--disabled'\r\n      )}\r\n      onClick={handleClick}\r\n    >\r\n      {format(addMonths(firstMonth, month), 'MMMM')}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Months\r\n","import { addWeeks, getDate, isAfter, isBefore, isSameDay, isSameMonth, subDays, subWeeks } from 'date-fns'\r\nimport React, { useCallback, useContext, useEffect, useMemo, useRef } from 'react'\r\nimport { ReactanggalContext } from '../context'\r\nimport pakaiClass from 'pakai-class'\r\nimport { addDays } from 'date-fns/esm'\r\n\r\ninterface IDay {\r\n  day: Date\r\n}\r\n\r\nconst Day: React.FC<IDay> = ({\r\n  day\r\n}) => {\r\n  const dayRef = useRef<HTMLDivElement>(null)\r\n\r\n  const {\r\n    currentSelected,\r\n    setCurrentSelected,\r\n    setPreSelection = () => { },\r\n    preSelection,\r\n    showOutsideMonth,\r\n    minDate,\r\n    maxDate,\r\n    forceFocus,\r\n    setForceFocus\r\n  } = useContext(ReactanggalContext)\r\n\r\n  const isOutsideMonth = useMemo(() => !isSameMonth(day, preSelection), [day, preSelection])\r\n\r\n  const isFocusable = useMemo(() => isSameDay(day, preSelection), [day, preSelection])\r\n\r\n  const isDisabled = useMemo(() => {\r\n    if (!minDate && !maxDate) return\r\n    return (minDate && isBefore(day, minDate)) || (maxDate && isAfter(day, maxDate))\r\n  }, [minDate, day, maxDate])\r\n\r\n  const handleClick = () => {\r\n    if (isDisabled) return\r\n    if (isOutsideMonth && !showOutsideMonth) return\r\n    if (!(typeof setCurrentSelected === 'function')) return\r\n\r\n    setCurrentSelected(day)\r\n\r\n    //set focus\r\n    setPreSelection(day)\r\n    setForceFocus(true)\r\n  }\r\n\r\n  //watch forceFocus\r\n  useEffect(() => {\r\n    if (forceFocus && isFocusable) {\r\n      setForceFocus(false)\r\n      dayRef.current?.focus()\r\n    }\r\n  }, [forceFocus, isFocusable, setForceFocus])\r\n\r\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\r\n    if (!isFocusable) return\r\n    const key = e.key\r\n    if (key !== ' ' && key !== 'Enter' && key !== 'ArrowUp' && key !== 'ArrowDown' && key !== 'ArrowRight' && key !== 'ArrowLeft') return\r\n    if (key === ' ' || key === 'Enter') {\r\n      setCurrentSelected(preSelection)\r\n      return\r\n    }\r\n\r\n    let newPreSelection;\r\n    let disabledMove;\r\n    if (key === 'ArrowUp' || key === 'ArrowLeft') {\r\n      newPreSelection = key === 'ArrowUp' ? subWeeks(preSelection, 1) : subDays(preSelection, 1)\r\n      disabledMove = minDate && isBefore(newPreSelection, minDate)\r\n    }\r\n    else if (key === 'ArrowDown' || key === 'ArrowRight') {\r\n      newPreSelection = key === 'ArrowDown' ? addWeeks(preSelection, 1) : addDays(preSelection, 1)\r\n      disabledMove = maxDate && isAfter(newPreSelection, maxDate)\r\n    }\r\n    if (!disabledMove && newPreSelection) {\r\n      setPreSelection(newPreSelection)\r\n      setForceFocus(true)\r\n    }\r\n  }, [setCurrentSelected, preSelection, setPreSelection, setForceFocus, isFocusable, minDate, maxDate])\r\n\r\n  return (\r\n    <div\r\n      onKeyDown={handleKeyDown}\r\n      ref={dayRef}\r\n      tabIndex={isFocusable ? 0 : -1}\r\n      className={pakaiClass(\r\n        'reactanggal__calendar-day reactanggal__calendar-day-num reactanggal__button',\r\n        isSameDay(day, new Date()) && 'reactanggal__calendar-day-num--today',\r\n        (currentSelected && isSameDay(day, currentSelected)) && 'reactanggal__calendar-day-num--selected',\r\n        isOutsideMonth && `reactanggal__calendar-day-num--${showOutsideMonth ? 'outside' : 'hidden'}`,\r\n        isDisabled && 'reactanggal__calendar-day-num--disabled'\r\n      )}\r\n      onClick={handleClick}\r\n    >\r\n      {getDate(day)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Day\r\n","import { addDays } from 'date-fns'\r\nimport React, { useMemo } from 'react'\r\nimport Day from './Day'\r\n\r\ninterface IWeek {\r\n  weekStart: Date,\r\n  week: string | number\r\n}\r\n\r\nconst Week: React.FC<IWeek> = ({\r\n  weekStart,\r\n  week\r\n}) => {\r\n  const renderDays = useMemo(() => {\r\n    return [0, 1, 2, 3, 4, 5, 6].map(el => (\r\n      <Day\r\n        key={`week-${week}-day-${el}`}\r\n        day={addDays(weekStart, el)}\r\n      />\r\n    ))\r\n  }, [weekStart, week])\r\n\r\n  return (\r\n    <div className=\"reactanggal__calendar-week\">\r\n      {renderDays}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Week\r\n","import { getMonth, getYear, isAfter, isBefore, setMonth, setYear, subYears } from 'date-fns'\r\nimport { addYears } from 'date-fns/esm'\r\nimport pakaiClass from 'pakai-class'\r\nimport React, { useCallback, useContext, useEffect, useMemo, useRef } from 'react'\r\nimport { ReactanggalContext } from '../context'\r\n\r\ninterface IYears {\r\n  yearStart: string | number,\r\n  yearColumn: string | number\r\n}\r\n\r\ninterface IYear {\r\n  year: number\r\n}\r\n\r\nconst Years: React.FC<IYears> = ({\r\n  yearStart,\r\n  yearColumn\r\n}) => {\r\n  const renderYears = useMemo(() => {\r\n    const years = []\r\n    for (let i = 0; i < 4; i++) {\r\n      years.push(\r\n        <Year\r\n          key={`yearColumn-${yearColumn}-year-${i}`}\r\n          year={+yearStart + i}\r\n        />\r\n      )\r\n    }\r\n    return years\r\n  }, [yearColumn, yearStart])\r\n\r\n  return (\r\n    <div className=\"reactanggal__calendar-years\">\r\n      {renderYears}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Year: React.FC<IYear> = ({\r\n  year\r\n}) => {\r\n  const yearRef = useRef<HTMLDivElement>(null)\r\n\r\n  const {\r\n    currentSelected,\r\n    preSelection,\r\n    preSelectionYear,\r\n    setPreSelection = () => { },\r\n    setPreSelectionYear,\r\n    setStep,\r\n    minDate,\r\n    maxDate,\r\n    forceFocus,\r\n    setForceFocus\r\n  } = useContext(ReactanggalContext)\r\n\r\n  const isFocusable = useMemo(() => +year === +getYear(preSelectionYear), [year, preSelectionYear])\r\n\r\n  const isDisabled = useMemo(() => {\r\n    if (!minDate && !maxDate) return\r\n    return (minDate && year < getYear(minDate)) || (maxDate && year > getYear(maxDate))\r\n  }, [minDate, maxDate, year])\r\n\r\n  const handleClick = useCallback(() => {\r\n    if (isDisabled) return\r\n\r\n    let newValue = setYear(preSelection, year)\r\n    if (minDate) {\r\n      // check isbefore and set the month to minDate\r\n      if (isBefore(newValue, minDate)) {\r\n        newValue = setMonth(newValue, getMonth(minDate))\r\n        // check again new value and set date to minDate\r\n        if (isBefore(newValue, minDate)) newValue = minDate\r\n      }\r\n    }\r\n    else if (maxDate) {\r\n      // check isafter and set the month to maxDate\r\n      if (isAfter(newValue, maxDate)) {\r\n        newValue = setMonth(newValue, getMonth(maxDate))\r\n        // check again new value and set date to maxDate\r\n        if (isAfter(newValue, maxDate)) newValue = maxDate\r\n      }\r\n    }\r\n\r\n    setPreSelectionYear(newValue)\r\n    setPreSelection(newValue)\r\n    setStep(2)\r\n    setForceFocus(true)\r\n  }, [isDisabled, setPreSelectionYear, preSelection, year, setPreSelection, setStep, setForceFocus, maxDate, minDate])\r\n\r\n  //watch forceFocus\r\n  useEffect(() => {\r\n    if (forceFocus && isFocusable) {\r\n      setForceFocus(false)\r\n      yearRef.current?.focus()\r\n    }\r\n  }, [forceFocus, isFocusable, setForceFocus])\r\n\r\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\r\n    if (!isFocusable) return\r\n    const key = e.key\r\n    if (key !== ' ' && key !== 'Enter' && key !== 'ArrowUp' && key !== 'ArrowDown' && key !== 'ArrowRight' && key !== 'ArrowLeft') return\r\n    if (key === ' ' || key === 'Enter') {\r\n      handleClick()\r\n      return\r\n    }\r\n\r\n    let newPreSelection;\r\n    let disabledMove;\r\n    if (key === 'ArrowUp' || key === 'ArrowLeft') {\r\n      newPreSelection = subYears(preSelectionYear, key === 'ArrowUp' ? 4 : 1)\r\n      const getYearNewPre = getYear(newPreSelection)\r\n      disabledMove = (minDate && getYearNewPre < getYear(minDate)) || getYearNewPre < 1\r\n    }\r\n    else if (key === 'ArrowDown' || key === 'ArrowRight') {\r\n      newPreSelection = addYears(preSelectionYear, key === 'ArrowDown' ? 4 : 1)\r\n      disabledMove = maxDate && getYear(newPreSelection) > getYear(maxDate)\r\n    }\r\n    if (!disabledMove && newPreSelection) {\r\n      setPreSelectionYear(newPreSelection)\r\n      setForceFocus(true)\r\n    }\r\n  }, [isFocusable, handleClick, minDate, maxDate, preSelectionYear, setPreSelectionYear, setForceFocus])\r\n\r\n  return (\r\n    <div\r\n      ref={yearRef}\r\n      onKeyDown={handleKeyDown}\r\n      tabIndex={isFocusable ? 0 : -1}\r\n      className={pakaiClass(\r\n        \"reactanggal__button reactanggal__calendar-year\",\r\n        +year === +getYear(new Date()) && 'reactanggal__calendar-year--today',\r\n        (currentSelected && +year === +getYear(currentSelected)) && 'reactanggal__calendar-year--selected',\r\n        isDisabled && 'reactanggal__calendar-year--disabled'\r\n      )}\r\n      onClick={handleClick}\r\n    >\r\n      {year}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Years\r\n","import { addDays, addWeeks, format, getWeeksInMonth, startOfMonth, startOfWeek } from 'date-fns'\r\nimport React, { useContext, useMemo } from 'react'\r\nimport { ReactanggalContext } from '../context'\r\nimport { myGetYearStart } from '../helpers'\r\nimport Months from './Months'\r\nimport Week from './Week'\r\nimport Years from './Years'\r\n\r\nconst CalendarBody = () => {\r\n  const { step, preSelection, preSelectionYear } = useContext(ReactanggalContext)\r\n\r\n  const renderDayNames = useMemo(() => {\r\n    let weekStart = startOfWeek(new Date())\r\n    return [0, 1, 2, 3, 4, 5, 6].map(el => (\r\n      <div\r\n        key={`dayname-${el}`}\r\n        className=\"reactanggal__calendar-day reactanggal__calendar-day-name\"\r\n      >\r\n        {format(addDays(weekStart, el), 'EEEEEE')}\r\n      </div>\r\n    ))\r\n  }, [])\r\n\r\n  const renderWeeks = useMemo(() => {\r\n    if (step !== 0) return\r\n\r\n    const weeks = []\r\n    let currentWeekStart = startOfWeek(startOfMonth(preSelection))\r\n    for (let i = 0; i < getWeeksInMonth(preSelection); i++) {\r\n      weeks.push(\r\n        <Week\r\n          key={`week-${i}`}\r\n          weekStart={currentWeekStart}\r\n          week={i}\r\n        />\r\n      )\r\n      currentWeekStart = addWeeks(currentWeekStart, 1)\r\n    }\r\n    return weeks\r\n  }, [preSelection, step])\r\n\r\n  const renderYearsColumn = useMemo(() => {\r\n    if (step !== 1) return\r\n\r\n    const yearsColumn = []\r\n    let currentYearStart = myGetYearStart(preSelectionYear, 24)\r\n    for (let i = 0; i < 6; i++) {\r\n      yearsColumn.push(\r\n        <Years\r\n          key={`yearColumn-${i}`}\r\n          yearStart={currentYearStart}\r\n          yearColumn={i}\r\n        />\r\n      )\r\n      currentYearStart = currentYearStart + 4\r\n    }\r\n\r\n    return yearsColumn\r\n  }, [step, preSelectionYear])\r\n\r\n  const renderMonths = useMemo(() => {\r\n    if (step !== 2) return\r\n    return <Months />\r\n  }, [step])\r\n\r\n  const renderCalender = useMemo(() => {\r\n    if (step === 0) return renderWeeks\r\n    else if (step === 1) return renderYearsColumn\r\n    else if (step === 2) return renderMonths\r\n    return\r\n  }, [step, renderMonths, renderWeeks, renderYearsColumn])\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        step === 0 &&\r\n        <div className=\"reactanggal__calendar-weeks-header\">\r\n          {\r\n            renderDayNames\r\n          }\r\n        </div>\r\n      }\r\n\r\n      <div className=\"reactanggal__calendar-body\">\r\n        {\r\n          renderCalender\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalendarBody\r\n","import React, { useEffect, useRef, useState } from 'react'\nimport CalendarHeader from './CalendarHeader'\nimport { ReactanggalContext } from './context'\nimport CalendarBody from './CalendarBody'\nimport { endOfDay, startOfDay } from 'date-fns'\n\ninterface IReactanggal {\n  selected?: Date | null | undefined\n  onChange?: (value: Date | null | undefined) => void,\n  minDate?: Date | null | undefined,\n  maxDate?: | null | undefined,\n  showOutsideMonth?: boolean\n}\n\nconst Reactanggal: React.FC<IReactanggal> = ({\n  selected,\n  onChange = () => { },\n  minDate,\n  maxDate,\n  showOutsideMonth = false\n}) => {\n  const [step, setStep] = useState(0)\n  const [preSelection, setPreSelection] = useState(selected || minDate || maxDate || new Date())\n  const [preSelectionYear, setPreSelectionYear] = useState(new Date())\n  const [forceFocus, setForceFocus] = useState(true)\n\n  return (\n    <ReactanggalContext.Provider value={{\n      currentSelected: selected,\n      setCurrentSelected: onChange,\n      step,\n      setStep,\n      preSelection,\n      setPreSelection,\n      preSelectionYear,\n      setPreSelectionYear,\n      minDate: minDate ? startOfDay(minDate) : minDate,\n      maxDate: maxDate ? endOfDay(maxDate) : maxDate,\n      showOutsideMonth,\n      forceFocus,\n      setForceFocus\n    }}\n    >\n      <ReactanggalRoot />\n    </ReactanggalContext.Provider>\n  )\n}\n\nconst ReactanggalRoot = () => {\n  const calendarRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    // for focus trap\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key != 'Tab') return\n      const focusableElements = calendarRef.current?.querySelectorAll('button:not([disabled]), [tabindex=\"0\"]')\n      if (e.target === focusableElements?.[focusableElements.length - 1] && !e.shiftKey) {\n        e.preventDefault();\n        (focusableElements[0] as HTMLElement)?.focus()\n      }\n      else if (e.target === focusableElements?.[0] && e.shiftKey) {\n        e.preventDefault();\n        (focusableElements[focusableElements.length - 1] as HTMLElement)?.focus()\n      }\n    }\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [])\n\n  return (\n    <div ref={calendarRef} className=\"reactanggal__calendar\">\n      <CalendarHeader />\n      <CalendarBody />\n    </div>\n  )\n}\n\nexport default Reactanggal\n","import { addYears, format } from 'date-fns'\r\nimport React, { useState } from 'react'\r\nimport Reactanggal from 'reactanggal'\r\nimport 'reactanggal/dist/reactanggal.css'\r\n\r\nconst minDate = addYears(new Date(), -1)\r\nconst maxDate = addYears(new Date(), 3)\r\n\r\nconst App = () => {\r\n  const [date, setDate] = useState(null)\r\n\r\n  return (\r\n    <div>\r\n      <p>{date && format(date, 'dd MM yyyy')}</p>\r\n      <Reactanggal\r\n        selected={date}\r\n        onChange={setDate}\r\n        minDate={minDate}\r\n        maxDate={maxDate}\r\n      // showOutsideMonth\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}